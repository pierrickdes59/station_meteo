  #include <RCSwitch.h> //Librairie pour envoyer par radio
  #include <OneWire.h> //Librairie pour lire le capteur DS18B20

  RCSwitch mySwitch = RCSwitch(); //Création d'un objet RCSwitch

  const int broche = 2; //Broche sur laquelle est connecté le DATA du capteur DS18B20
  const int mesure = 0x44; //Commande pour lancer la mesure sur le capteur DS18B20
  const int lecture = 0xBE; //Commande pour lancer la lecture sur le capteur DS18B20
  int tempet=0; // Variable pour resultat brute  de la mesure
  float tempetf=0.0; // Variable pour resultat à virgule de la mesure

  OneWire capteur(broche); // Définition d'un objet OneWire
  byte adresse[8];  // Tableau pour stocker l'adresse du capteur DS18B20
  byte donnees[12]; // Tableau pour stocker les données reçues du capteur DS18B20

 int port = A0; //port de la photo-résistance
int valeur = 0; 
float vin = 0;   


void setup() {
  Serial.begin(9600); //Initialisation de la vitesse à 9600 bauds
  mySwitch.enableTransmit(10); // Broche sur laquelle est connecté le DATA de l'émetteur radio
  capteur.search(adresse); // Cherche l'adresse du capteur DS18B20
  capteur.reset(); // Réinitialise la connexion avec le capteur DS18B20
 
}
 
void loop() {
  
 
  capteur.reset(); // Réinitialise la connexion avec le capteur DS18B20
  capteur.select(adresse); // Sélectionne le capteur DS18B20
  capteur.write(mesure,1); // Demande au capteur DS18B20 de lancer une mesure et maintient l'alimentation
  delay(1000); // Pause de 1 seconde 
  capteur.reset(); //Réinitialise la connexion avec le capteur DS18B20
  capteur.select(adresse); // Sélectionne le capteur DS18B20
  capteur.write(lecture,1); // Lance la mesure sur le capteur DS18B20 et maintient l'alimentation

for (int i = 0; i < 9; i++)
{
  donnees[i] = capteur.read(); // Remplit le tableau 'donnees' avec les informations du capteur
}
  donnees[1]=donnees[1] & B10000111; // Met à 0 les bits de signes inutiles
  tempet=donnees[1]; // Bits de poids fort
  tempet=tempet<<8; 
  tempet=tempet+donnees[0]; // Bits de poids faible

  // --- En mode 12 bits, la résolution est de 0.0625°C - cf datasheet DS18B20
  tempetf=float(tempet)*6.25; // Convertit en degrès Celsius
  tempetf=9990000+tempetf;
  
  valeur = analogRead(port);
  vin = (valeur * 5.0) / 1024.0; 
  vin = vin * 1000;
  vin = 8880000 + vin;
  
  mySwitch.send(tempetf, 24); // Envoie une première fois la température par radio
  delay(1000);  // Pause de 1 seconde
  mySwitch.send(vin, 24); // Renvoie une deuxième fois la température par radio
  delay(1000);
 
  Serial.println(vin);
  Serial.println(tempetf); // Affiche la température envoyée dans le moniteur série
  delay(2000); // Pause de 2 secondes
 
}